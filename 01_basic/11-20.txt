6011 : [기초-입출력] 실수 1개 입력받아 변환하여 출력하기(설명)(py)

숫자(0~9)와 소수점(.)을 사용해 표현한 수를 실수(real number)라고 한다.

변수에 실수값을 저장한 후
변수에 저장되어 있는 값을 그대로 출력해보자.

예시
f = input()
f = float(f)
print(f)
와 같은 형태로 가능하다.

참고
어떤 값을 1개 입력받아 계산하거나 처리해야하는 경우라면, 입력되는 값이 수인지 문자열인지 구분해야한다.
조금 생각해보면, 키보드로 입력한 9라는 값이 문자 9인지, 정수 9인지, 실수 9.0인지 컴퓨터가 스스로 구분하지 못한다는 것을 알 수 있다.
컴퓨터 내부에서는 2진 체계의 디지털 형태로만 저장할 수 있기 때문에 정수, 문자, 실수 등의 저장 방법이 다르다.
입력한 값을 원하는 형태로 계산하거나 처리하기 위해서는 입력한 값이 어떤 데이터(정수, 문자, 실수, 문자열 등)인지 명확히 구분해 주어야 한다.
 
6012 : [기초-입출력] 정수 2개 입력받아 그대로 출력하기1(설명)(py)

줄을 바꿔 정수(integer) 2개를 입력받아 줄을 바꿔 출력해보자.

예시
a = input() 
b = input()
a=int(a)
b=int(b)
print(a)
print(b)
과 같은 방법으로 가능하다.


6013 : [기초-입출력] 문자 2개 입력받아 순서 바꿔 출력하기1(py)

줄을 바꿔 문자(character) 2개를 입력받고, 순서를 바꿔 한 줄씩 출력해보자.


6014 : [기초-입출력] 실수 1개 입력받아 3번 출력하기(py)
실수(real number) 1개를 입력받아 줄을 바꿔 3번 출력해보자.

예시
...
print(f)  #f에 저장되어있는 값을 출력하고 줄을 바꾼다.
print(f)
print(f)
와 같은 방법으로 3번 줄을 바꿔 출력할 수 있다.

참고
python 코드 사이에 설명(주석)을 작성해 넣고 싶은 경우 샵('#') 기호를 사용하면 된다.
#가 시작된 위치부터 그 줄을 마지막까지는 python 인터프리터에 의해서 실행되지 않는다.
소스코드 부분 부분에 설명, 내용, 표시를 한 줄 설명으로 넣을 경우에 편리하게 사용할 수 있다.
여러 줄로 설명을 넣는 방법도 있다. 스스로 찾아보자!


6015 : [기초-입출력] 정수 2개 입력받아 그대로 출력하기2(설명)(py)

공백을 두고 입력된정수(integer) 2개를 입력받아 줄을 바꿔 출력해보자.

예시
a, b = input().split()
a=int(a)
b=int(b)
print(a)
print(b)
과 같은 방법으로 두 정수를 입력받아 출력할 수 있다.

참고
python의 input()은 한 줄 단위로 입력을 받는다.
input().split() 를 사용하면, 공백을 기준으로 입력된 값들을 나누어(split) 자른다.
a, b = 1, 2
를 실행하면, a에는 1 b에는 2가 저장된다.
(주의 : 하지만, 다른 일반적인 프로그래밍언어에서는 이러한 방법을 지원하지 않기 때문에 a=1, b=2 를 한 번에 하나씩 따로 실행시켜야 한다.)


6016 : [기초-입출력] 문자 2개 입력받아 순서 바꿔 출력하기2(설명)(py)


공백을 두고 문자(character) 2개를 입력받아 순서를 바꿔 출력해보자.

참고
...
print(c2, c1)
와 같은 방법으로 출력하면, c1과 c2에 저장된 값이 공백을 두고 순서가 바뀌어 한 줄로 출력된다.
print( ) 안에서 쉼표(,)를 찍어 순서대로 나열하면, 그 순서대로 공백을 두고 출력된다.


6017 : [기초-입출력] 문장 1개 입력받아 3번 출력하기(설명)(py)


정수(integer), 실수, 문자(character), 문자열(string) 등 1개만 입력받아 한 줄로 3번 출력해보자.

예시
s = input()
print(s, s, s)  #공백으로 구분해 한 줄로 출력한다.
와 같은 방법으로 3번 출력할 수 있다.

참고
python 언어에서는 문자/정수/실수/문자열 등 특별한 구분이 없이도 원하는 변수에 저장시켜 출력 할 수 있다.
하지만, 저장된 값을 이용해 계산하거나 서로 붙여 연결시키거나 잘라내는 작업을 한다면?
반드시 저장되어있는 값의 종류(문자/정수/실수/문자열 등)를 구분해 주어야 한다.


6018 : [기초-입출력] 시간 입력받아 그대로 출력하기(설명)(py)

24시간 시:분 형식으로 시간이 입력될 때, 그대로 출력하는 연습을 해보자.

예시
a, b = input().split(':')
print(a, b, sep=':')
와 같은 방법으로 가능하다.

참고
input().split(':') 를 사용하면 콜론 ':' 기호를 기준으로 자른다.
print(?, ?, sep=':') 를 사용하면 콜론 ':' 기호를 사이에 두고 값을 출력한다.
sep 는 분류기호(seperator)를 의미한다.


6019 : [기초-입출력] 연월일 입력받아 순서 바꿔 출력하기(py)

"연도.월.일"을 입력받아 "일-월-연도" 순서로 바꿔 출력해보자.

참고
y, m, d = input().split('.')
과 같이 변수들을 순서대로 나열하면 구분기호를 기준으로 잘라 순서대로 저장한다.


6020 : [기초-입출력] 주민번호 입력받아 형태 바꿔 출력하기(py)

주민번호는 다음과 같이 구성된다.
XXXXXX-XXXXXXX

왼쪽 6자리는 생년월일(YYMMDD)이고, 오른쪽 7자리는 성별,출생지역,확인코드로 구성되어있다.
주민번호를 입력받아 형태를 바꿔 출력해보자.



